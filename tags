!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a3c87ab5/
EnhancedList	better_list/elist.py	/^class EnhancedList(list):$/;"	c
Queue	queue/queue.py	/^class Queue:$/;"	c
Stack	stack/stack.py	/^class Stack:$/;"	c
__init__	better_list/elist.py	/^    def __init__(self):$/;"	m	class:EnhancedList
__init__	queue/queue.py	/^    def __init__(self):$/;"	m	class:Queue
__init__	stack/stack.py	/^    def __init__(self):$/;"	m	class:Stack
append	better_list/elist.py	/^    def append(self, item):$/;"	m	class:EnhancedList
copy	better_list/elist.py	/^    def copy(self):$/;"	m	class:EnhancedList
data_structures	README.md	/^# data_structures$/;"	c
dequeue	queue/queue.py	/^    def dequeue(self):$/;"	m	class:Queue
dishes	stack/test.py	/^dishes = stack.Stack()$/;"	v
elist1	better_list/test.py	/^elist1 = elist.EnhancedList()$/;"	v
elist2	better_list/test.py	/^elist2 = elist1.copy()$/;"	v
empty	stack/stack.py	/^    def empty(self):$/;"	m	class:Stack
enqueue	queue/queue.py	/^    def enqueue(self, item):$/;"	m	class:Queue
indexes	better_list/elist.py	/^    def indexes(self, value):$/;"	m	class:EnhancedList
indices	better_list/elist.py	/^    def indices(self, value):$/;"	m	class:EnhancedList
indices_gen	better_list/elist.py	/^        def indices_gen():$/;"	f	member:EnhancedList.indices	file:
is_empty	queue/queue.py	/^    def is_empty(self):$/;"	m	class:Queue
line	queue/test.py	/^line = queue.Queue()$/;"	v
papers	stack/test.py	/^papers = stack.Stack()$/;"	v
peek	queue/queue.py	/^    def peek(self):$/;"	m	class:Queue
pop	stack/stack.py	/^    def pop(self):$/;"	m	class:Stack
push	stack/stack.py	/^    def push(self, item):$/;"	m	class:Stack
size	queue/queue.py	/^    def size(self):$/;"	m	class:Queue
size	stack/stack.py	/^    def size(self):$/;"	m	class:Stack
top	stack/stack.py	/^    def top(self):$/;"	m	class:Stack
